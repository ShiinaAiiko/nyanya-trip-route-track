syntax = "proto3";

option go_package = "./;protos";
package trip;
import "city.proto";

message VehicleItem {
  string id = 1;
  string name = 3;
  // Bike、Car、Truck、Public、Transportation、Airplane、Other
  string type = 2;
  string logo = 8;
  string licensePlate = 9;
  string authorId = 10;
  TripPosition position = 4;
  // 通过链表获取
  int64 tripCount = 11;

  string carModel = 13;

  // 1、-1
  int64 status = 5;
  int64 createTime = 6;
  int64 lastUpdateTime = 7;

  // 位置共享类型 5 所有人 0 仅本人可看 -1 禁止共享
  int64 positionShare = 12;
}

// 位置精度和海拔精度可以不输出，速度精确到小数点后2位即可，
// 也就是cm单位就行了，时间戳使用秒级单位数据，
// heading方向输出小数点后3位即可
message TripPosition {
  double latitude = 1;
  double longitude = 2;
  double altitude = 3;
  double altitudeAccuracy = 4;
  double accuracy = 5;
  double heading = 6;
  double speed = 7;
  int64 timestamp = 8;

  // 本地用
  double distance = 9;
}
message TripStatistics {
  double distance = 1;
  double maxSpeed = 2;
  double averageSpeed = 3;
  double maxAltitude = 4;
  double minAltitude = 5;
  double averageAltitude = 6;
  double climbAltitude = 7;
  double descendAltitude = 8;
}

message TripPermissions {
  bool allowShare = 1;
  bool customTrip = 2;
}

message TripMark { int64 timestamp = 1; }

message TripCity {
  string cityId = 1;
  //  完整名，·间隔
  string city = 2;

  message EntryTimeItem { int64 timestamp = 1; }
  repeated EntryTimeItem entryTimes = 3;
  // 仅输出
  repeated city.CityItem cityDetails = 4;
}

message Trip {
  string id = 1;
  // 非必填
  string name = 2;
  // Running、Bike、Drive
  string type = 3;
  string authorId = 9;
  trip.VehicleItem vehicle = 14;
  // string vehicleId = 15;
  repeated TripPosition positions = 4;
  TripStatistics statistics = 5;
  TripPermissions permissions = 11;
  // 1 normal 0 ing -1 delete
  int64 status = 6;
  int64 createTime = 7;
  int64 startTime = 10;
  int64 lastUpdateTime = 16;
  int64 endTime = 8;

  // web专属
  int64 correctedData = 12;

  repeated TripMark marks = 13;

  repeated TripCity cities = 15;
}

message AddTripMark {
  message Request {
    string id = 1;
    TripMark mark = 2;
  }
  message Response {}
}

message AddTrip {
  message Request {
    // Running、Bike、Drive
    string type = 1;
    // repeated TripPosition positions = 2;
    // int64 status = 4;
    // int64 startTime = 5;

    // 选填
    string vehicleId = 2;

    // 选填（自定义行程才填充
    bool customTrip = 3;
    int64 startTime = 4;
    int64 endTime = 5;
  }
  message Response { Trip trip = 1; }
}

message AddTripToOnline {
  message Request {
    // Running、Bike、Drive
    string type = 1;
    repeated TripPosition positions = 2;

    repeated TripMark marks = 8;

    // TripStatistics statistics = 3;
    // int64 status = 4;
    int64 createTime = 7;
    int64 startTime = 5;
    int64 endTime = 6;
    bool customTrip = 9;
  }
  message Response { Trip trip = 1; }
}

// 30s 更 新一次
message UpdateTripPosition {
  message Request {
    // 必填
    string id = 1;
    // 这段时间内的
    repeated TripPosition positions = 2;
    double distance = 3;
    string vehicleId = 4;
  }
  message Response {}
}

message ResumeTrip {
  message Request { string id = 1; }
  message Response {}
}

message FinishTrip {
  message Request {
    // 必填
    string id = 1;
    // TripStatistics statistics = 2;
    int64 endTime = 3;
  }
  message Response { bool deleted = 1; }
}

message CorrectedTripData {
  message Request {
    // 必填
    string id = 1;
    // TripStatistics statistics = 2;
  }
  message Response {}
}

message UpdateTrip {
  message Request {
    // 必填
    string id = 1;
    // 可填，Allow / NotAllow
    string allowShare = 2;
    // 可填
    string name = 3;
    // 可填，Running、Bike、Drive
    string type = 4;
    // 选填
    string vehicleId = 5;
  }
  message Response {
    // 可填
    string name = 2;
  }
}

message UpdateTrips {
  message Request {
    // 必填
    repeated string ids = 1;
    // 选填
    string vehicleId = 5;
  }
  message Response {}
}

message DeleteTrip {
  message Request {
    // 必填
    string id = 1;
  }
  message Response {}
}

message GetTrip {
  message Request { string id = 1; }
  message Response { Trip trip = 1; }
}

message GetTripPositions {
  message Request { string id = 1; }
  message Response {
    // 时间记得是输出秒，且输出与startTime相差多少s的数字即可
    // startTime为第一个position的时间戳
    TripPositions tripPositions = 1;
  }
}

message TripPositions {
  // 时间记得是输出秒，且输出与startTime相差多少s的数字即可
  // startTime为第一个position的时间戳
  int64 startTime = 1;
  // 禁止输出了一些数据，具体的看代码
  repeated string positions = 2;
  // repeated string keys = 8;
  int64 total = 3;
  string id = 4;
  string vehicleId = 9;
  string type = 5;
  // 详情页专属
  int64 status = 6;

  // web专属
  int64 correctedData = 7;

  string authorId = 8;

  // 仅前端输出
  repeated TripPosition positionList = 10;
  TripPermissions permissions = 11;
}

message GetTripHistoryPositions {
  message Request {
    // 必选 All、Running、Bike、Drive
    string type = 2;
    // 包括筛选，每次不能传入超过20个数据
    repeated string ids = 3;
    int64 pageNum = 4;
    int64 pageSize = 5;

    // 可选 [createTime,endTime]
    repeated int64 timeLimit = 6;
    repeated string vehicleLimit = 8;

    bool fullData = 7;

    string jmId = 9;
  }
  message Response {
    repeated TripPositions list = 1;
    int64 total = 2;
  }
}

message GetTrips {
  message Request {
    // 可选
    repeated string id = 1;
    // 必选 All、Running、Bike、Drive
    string type = 2;
    // 可选 [createTime,endTime]
    repeated int64 createTimeLimit = 3;
    // 可选 [startTime,endTime]
    repeated int64 lastUpdateTimeLimit = 9;
    // 可选 CreateTime / TotalDistance，默认 CreateTime
    string sort = 4;
    int64 pageNum = 5;
    int64 pageSize = 6;
    repeated string vehicleLimit = 7;
    repeated string journeyMemoryLimit = 10;
    repeated int64 distanceLimit = 8;

    bool turnOffCache = 11;
    // repeated int64 distanceLimit = 7;
  }
  message Response {
    repeated Trip list = 1;
    int64 total = 2;
  }
}

message GetTripStatistics {
  message Request {
    // 可选
    repeated string id = 1;
    // 必选 Running、Bike、Drive
    string type = 2;
    // 可选 [createTime,endTime]
    repeated int64 timeLimit = 3;
    repeated string vehicleLimit = 4;
    repeated string journeyMemoryLimit = 6;
    repeated int64 distanceLimit = 5;
    // int64 pageNum = 6;
    // int64 pageSize = 7;

    // 可选 CreateTime / TotalDistance，默认 CreateTime

    // repeated int64 distanceLimit = 4;
  }
  message Response {
    trip.TripHistoricalStatistics statistics = 1;
    // int32 count = 1;
    // // s
    // int64 time = 2;
    // // m
    // double distance = 3;
    // int32 days = 4;
    //
    // // repeated Trip list = 4;
    // repeated string uselessData = 5;
  }
}

message TripHistoricalStatistics {
  int32 count = 1;
  int64 time = 2;
  double distance = 3;
  int32 days = 4;
  repeated string uselessData = 12;

  message NumItem {
    double num = 1;
    string id = 2;
  }
  NumItem maxDistance = 5;
  NumItem maxSpeed = 6;
  NumItem fastestAverageSpeed = 7;
  NumItem maxAltitude = 8;
  NumItem minAltitude = 9;
  NumItem maxClimbAltitude = 10;
  NumItem maxDescendAltitude = 11;
  NumItem maxTotalTripDuration = 13;
  NumItem maxDrivingDuration = 14;
}

// message GetHistoricalStatistics {
//   message Request {
//     // 必选 Running、Bike、Drive
//     string type = 1;
//     // 可选 [createTime,endTime]
//     repeated int64 timeLimit = 2;
//
//     // repeated int64 distanceLimit = 3;
//   }
//   message Response {
//     trip.TripHistoricalStatistics statistics = 1;
//     // message NumItem {
//     //   double num = 1;
//     //   string id = 2;
//     // }
//     // NumItem maxDistance = 1;
//     // NumItem maxSpeed = 2;
//     // NumItem fastestAverageSpeed = 3;
//     // NumItem maxAltitude = 4;
//     // NumItem minAltitude = 5;
//     // NumItem maxClimbAltitude = 6;
//     // NumItem maxDescendAltitude = 7;
//   }
// }
message ClearTripCities {
  message Request { string tripId = 1; }
  message Response {}
}
