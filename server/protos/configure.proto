syntax = "proto3";

option go_package = "./;protos";
package configure;

message Configure {
  message MapKey {
    string mapKey = 1;
    // Normal / Gray / Black / Dark
    string mapMode = 2;
  }
  message PolylineWidth {
    int64 ongoingTrip = 1;
    int64 historyTripTrack = 2;
    // 历史行程里选中的行程
    int64 historyTripTrackSelectedTrip = 3;
    int64 reviewTrip = 4;
  }
  message SpeedColorLimit {
    message SpeedColorLimitItem {
      double minSpeed = 1;
      double maxSpeed = 2;
    }
    SpeedColorLimitItem running = 1;
    SpeedColorLimitItem bike = 2;
    SpeedColorLimitItem drive = 3;
    SpeedColorLimitItem motorcycle = 4;
    SpeedColorLimitItem walking = 5;
    SpeedColorLimitItem powerwalking = 6;
    SpeedColorLimitItem plane = 7;
    SpeedColorLimitItem train = 8;
    SpeedColorLimitItem publictransport = 9;
  }
  message MapLayer {
    message MapLayerItem {
      string mapKey = 1;
      // Normal / Gray / Black / Dark
      string mapMode = 2;
      bool roadColorFade = 3;
      bool showAvatarAtCurrentPosition = 5;
      bool showSpeedColor = 6;
      bool cityName = 7;
      string cityBoundaries = 8;
      bool tripTrackRoute = 9;
      bool speedAnimation = 10;
      bool turnOnVoice = 11;
      bool showPositionMarker = 12;
      // RedGreen / PinkBlue
      string trackSpeedColor = 13;
      // Blue / Pink / Red
      string trackRouteColor = 14;
      int32 polylineWidth = 15;
    }

    MapLayerItem indexPage = 1;
    MapLayerItem trackRoutePage = 2;
    MapLayerItem tripItemPage = 3;
    MapLayerItem journeyMemoriesPage = 4;
    MapLayerItem findLocationModal = 5;
    MapLayerItem createCustomTripModal = 6;
    MapLayerItem replayTripModal = 7;
    MapLayerItem visitedCitiesModal = 8;
  }

  MapLayer mapLayer = 1;

  message General {
    // Cloud
    SpeedColorLimit speedColorLimit = 1;
    // Cloud
    // string trackSpeedColor = 4;
    // Cloud
    // string trackRouteColor = 5;
  }
  General general = 2;

  // Filter Local
  message Filter {
    message FilterItem {
      string startDate = 1;
      string endDate = 2;
      repeated string selectedVehicleIds = 3;
      // 仅trackRoute
      repeated string selectedTripTypes = 4;
      // 仅trackRoute Not stored
      repeated string selectedTripIds = 5;
      repeated string selectedJmIds = 6;
      // int64 shortestDistance = 6;
      // max ~100000km
      // int64 longestDistance = 7;

      bool showCustomTrip = 7;
      bool showFullData = 8;

      message RangeItem {
        int32 min = 1;
        int32 max = 2;
      }
      RangeItem distanceRange = 9;
      RangeItem speedRange = 10;
      RangeItem altitudeRange = 11;
    }
    // Local
    FilterItem tripHistory = 1;
    // Cloud
    FilterItem trackRoute = 2;
  }
  Filter filter = 3;
  int64 lastUpdateTime = 4;
  // Local
  //  bool roadColorFade = 11;

  // 谁新用谁

  // Local
  // MapKey baseMap = 2;
  // Local
  // MapKey trackRouteMap = 3;

  // Cloud
  // bool showAvatarAtCurrentPosition = 6;

  // Cloud
  //  PolylineWidth polylineWidth = 7;

  //  Local
  // bool speedAnimation = 9;
}

message GetConfigure {
  message Request {}
  message Response { Configure configure = 1; }
}

message SyncConfigure {
  message Request { Configure configure = 1; }
  message Response {}
}
